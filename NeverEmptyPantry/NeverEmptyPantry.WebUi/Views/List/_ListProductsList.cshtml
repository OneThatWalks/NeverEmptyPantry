@using NeverEmptyPantry.Common.Enum
@using NeverEmptyPantry.Common.Models
@using NeverEmptyPantry.Common.Models.List
@model ListViewModel

<h4> List Products.</h4>
<table class="table table-hover table-condensed">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Product
            </th>
            <th>
                List
            </th>
            <th>
                AddedDateTime
            </th>
            <th>
                ListProductState
            </th>
            <th>
                AuditDateTime
            </th>
            <th>
                User Votes
            </th>
            @if (User.Identity.IsAuthenticated)
            {
                <th>
                    Your Vote
                </th>
            }
            <th>

            </th>
        </tr>
    </thead>
    <tbody>

    @{
        var list = Model.ListProducts != null ? Model.ListProducts : new List<ListProductDto>();
        var items = User.IsInRole("Adminsitrator") ? list : list.Where(x => x.ListProductState != ListProductState.ITEM_REMOVED);
    }
    @foreach (var item in items)
    {
        var votes = Model.UserProductVotes != null ? Model.UserProductVotes.Where(x => x.ListProduct.Id == item.Id).ToList() : new List<UserProductVoteDto>();
        var auth = User.Identity.IsAuthenticated;
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Product.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.List.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AddedDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ListProductState)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AuditDateTime)
            </td>
            <td>
                @votes.Count()
            </td>
            @if (User.Identity.IsAuthenticated)
            {
                <td>
                    @if (auth && votes.Any())
                    {
                        var userVote = votes.SingleOrDefault(x => x.ApplicationUser.Email == User.Identity.Name);
                        @userVote?.UserProductVoteState
                        ;
                    }
                </td>
            }
            <td>
                @if (auth)
                {
                    var userVotes = votes.SingleOrDefault(x => x.ApplicationUser.Email == User.Identity.Name);
                    if (userVotes == null)
                    {
                        @Html.ActionLink("Vote", "CastVote", "List", new {id = Model.Id, product = item.Product.Id})
                        @:|
                    }
                    else
                    {
                        <a href="#" onclick="getPartialView('@Url.Action("VotePartial", "List", new {id = userVotes.Id})')">Update</a>
                        @:|
                        @Html.ActionLink("Remove", "RemoveVote", "List", new {id = item.Id, listId = Model.Id})
                    }
                }
            </td>
        </tr>
    }
    </tbody>
</table>

<div id="myVoteModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="myVoteModalLabel" aria-hidden="true">

</div>
